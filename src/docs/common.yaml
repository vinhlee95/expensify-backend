components:
#-------------------------------
# Reusable schemas (data models)
#-------------------------------
  schemas:

    #-------------------------------
    # Error Code

    ErrorCode:  # Can be referenced as '#/components/schemas/ErrorCode'
      type: integer
      description: |
        * 101 - passwordNotCorrect
        * 102 - emailNotCorrect
        * 103 - emailNotFound
        * 104 - emailNotUnique
        * 105 - resetTokenInvalid
        * 106 - notActiveUser
        * 107 - notHasPermission
        * 108 - googleAccountHasBeenLinked
        * 109 - googleAccountHasBeenTaken

    #-------------------------------
    # Error response

    Error:  # Can be referenced as '#/components/schemas/Error'
      type: object
      properties:
        status:
          type: integer
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
      required:
      - status
      - errorCode
      - message

    #-------------------------------
    # Message response

    ResponseMessage:  # Can be referenced as '#/components/schemas/ResponseMessage'
      description: Success response string message
      type: object
      properties:
        message:
          type: string

    #-------------------------------
    # Success response

    Response: # Can be referenced as '#/components/schemas/Response'
      type: object
      properties:
        status:
          type: integer
          enum:
            - 200
            - 201
        data:
          type: object
          description: Success response data
      required:
        - data

#-------------------------------
# Reusable parameters
#-------------------------------

  parameters:

    id: # Can be referenced as '#/components/parameters/id'
      in: path
      name: id
      description: Model id
      required: true
      schema:
        type: string

    field: # Can be referenced as '#/components/parameters/field'
      in: query
      name: field
      description: Field to sort
      schema:
        type: string

    sort: # Can be referenced as '#/components/parameters/sort'
      in: query
      name: sort
      description: Sorting direction
      schema:
        type: string
        enum:
          - desc
          - asc

    offset: # Can be referenced as '#/components/parameters/offset'
      in: query
      name: offset
      description: offset for pagination
      schema:
        type: number
        min: 0

    limit: # Can be referenced as '#/components/parameters/limit'
      in: query
      name: limit
      description: limit for pagination
      schema:
        type: number
        min: 0

    search: # Can be referenced as '#/components/parameters/search'
      in: query
      name: search
      description: Search text
      schema:
        type: string

#-------------------------------
# Reusable responses
#-------------------------------

  responses:

    #-------------------------------
    # Error response

    ErrorResponse: # Can be referenced as '#/components/responses/ErrorResponse'
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    #-------------------------------
    # Message response

    MessageResponse:  # Can be referenced as '#/components/responses/MessageResponse'
      description: A JSON object containing success message response
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/Response'
            - properties:
                data:
                  $ref: '#/components/schemas/ResponseMessage'
              required:
              - data
